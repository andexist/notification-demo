version: '3.8'
services:
  notification_app:
    container_name: notification_app
    build:
      context: '.'
      args:
        - APP_ENV=development
        - COMPOSER_NO_INTERACTION=0
    ports:
      - 3006:80
    networks:
      - demonet
    volumes:
      - ./app:/app
    command: bash -c "composer install && supervisord"
    depends_on:
      - mysql-server
      - rabbitmq
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 5

  mysql-server:
    image: mysql:8.0
    container_name: notification-db
    environment:
      MYSQL_DATABASE: notification
      MYSQL_PASSWORD: root
      MYSQL_ROOT_PASSWORD: root
    ports:
      - 3307:3306
    networks:
      - demonet
    volumes:
      - mysql_data:/var/lib/mysql:rw
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot"]
      interval: 30s
      timeout: 10s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    restart: unless-stopped
    volumes:
      - ./infra/rabbitmq/data:/var/lib/rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - demonet
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  mysql_data:

networks:
  demonet:
    name: app_network
